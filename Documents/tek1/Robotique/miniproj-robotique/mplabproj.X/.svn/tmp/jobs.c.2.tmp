#include <p18cxxx.h>
#include <i2c.h>
#include <stdio.h>
#include <stdlib.h>
#include "liblcd.h"
#include "graph.h"

#define adrtc74 0b1001101
#define regtemp 0
#define config 1

void    job_lcd(char temp, char analog)
{
    static int i = 0;
    char    mybuff[16];

    sprintf(mybuff, (const far rom char*)"Temp = %d Deg", temp);
    lcd_putram(mybuff, 0, 0);
    sprintf(mybuff, (const far rom char*)"Analog = %d", analog);
    lcd_putram(mybuff, 1, 0);
    i += 1;
}

static char _ack(void)
{
  while(SSPSTATbits.R_W);
  while(SSPCON2bits.ACKSTAT);
}

static char _read_thermal(unsigned char adresse, unsigned char registre)
{
  char t;
  // SSPSR => SSPBUF P128
  // P130
  // 
  SSPCON2bits.SEN = 1;
  while (SSPCON2bits.SEN);
  SSPBUF = adresse << 1;
  _ack();
  SSPBUF = registre;
  _ack();
  SSPCON2bits.RSEN = 1;
  while (SSPCON2bits.RSEN);
  SSPBUF = (adresse << 1) | 0b00000001;
  _ack();
  SSPCON2bits.RCEN = 1;
  while (SSPCON2bits.RCEN);
  t = SSPBUF;
  SSPCON2bits.ACKDT = 1;
  SSPCON2bits.ACKEN = 1;
  while (SSPCON2bits.ACKEN);
  SSPCON2bits.PEN = 1;
  while (SSPCON2bits.PEN);
  return t;
}

char	job_thermal(void)
{
  char t;
  char buff[14] = {0,};

  t = 0;
  while (!((t = _read_thermal(adrtc74, config)) & 0b01000000));
  t = _read_thermal(adrtc74, regtemp);
  //add_point_to_graph(t, &deg_graph);
  return (t);
}

char	job_analog(void)
{
  return ADRESH;
}

void    job(void)
{
    char    t;
    char    analog;
    t = job_thermal();
    analog = job_analog();
    job_lcd(t, analog);
    //    PORTB = PORTD;
}
