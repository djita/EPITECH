/*
** str_to_wordtab.c for src in /mnt/fedora_std/home/falck_m/Work/42sh/src
** 
** Made by lyoma guillou
** Login   <guillo_e@epitech.net>
** 
** Started on  Sun May 20 21:43:00 2012 lyoma guillou
** Last update Sun May 20 22:14:52 2012 lyoma guillou
*/

#define _GNU_SOURCE
#include <string.h>
#include <stdlib.h>

static int	_is_sep(char c)
{
  return ((c <= ' '));
}

static int	_count_pattern(char *str)
{
  int		i;
  int		cnt;
  int		flag;

  i = 0;
  flag = 1;
  cnt = 0;
  while (str[i])
    {
      if (str[i] == '"' || str[i] == '\'')
	flag = -flag;
      if (flag == 1 && (str[i] == ' ' || str[i] == '\'' || str[i] == '"'))
	++cnt;
      ++i;
    }
  return (cnt);
}

static char	*_get_next_pattern(char *str)
{
  char		*buf;
  char		*tmp;
  int		i;
  int		flag;
  int		cnt;

  i = 0;
  flag = 1;
  cnt = 0;
  while (tmp[i] && (tmp[i] != ' ' || flag < 0))
    {
      if (tmp[i] == '"' || tmp[i] == '\'')
	{
	  flag = -flag;
	  ++cnt;
	}
      ++i;
    }
  buf = (cnt == 2) ? strndup(tmp + 1, i - 2) : strndup(tmp, i);
  while (tmp[i] && _is_sep(tmp[i]))
    ++i;
  strcpy(str, tmp + i);
  return ((buf[0] != '\0') ? buf : NULL);
}

char		**str_to_wordtab(char *src)
{
  char		**tab;
  char		*buf;
  char		*str;
  int		i;

  str = strdup(src);
  if (!(tab = malloc((_count_pattern(str) + 1) * sizeof(*tab))))
    return (NULL);
  i = 0;
  while ((buf = _get_next_pattern(str)))
    {
      tab[i] = buf;
      ++i;
    }
  tab[i] = NULL;
  free(str);
  return (tab);
}
