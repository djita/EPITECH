Details administratifs:

- Aucune forme de communication n'est permise.

	- Vous devez avoir votre carte d'etudiant. Vous devez la poser face visible
	  sur votre table

	- Ceci est un examen, il est interdit de discuter, ecouter de la musique,
	  faire du bruit, ou de produire toute autres nuisances pouvant deranger les
	  autres etudiants ou perturber le bon deroulement de l'examen

	- Vos telephones portables doivent etre eteints.
	
	- Il faudra utiliser le sous-repertoire "rendu" a la racine du compte,
	  il contiendra les repertoires aux noms demandes pour chaque
	  exercice.

	- Chaque exercice doit etre realise dans le repertoire correspondant au 
	  nom indique dans l'en-tete de chaque exercice.

	- Le repertoire "rendu", doit contenir un fichier nomme "auteur"
	  comprenant :
		le login (ex: jog) suivi d'un '\n'.
	  ce qui doit donner:

	  jog@neutron> cat -e ~/rendu/auteur
	  jog$

	- C'est un programme qui s'occupe du ramassage, respectez les noms,
	  les chemins, les fichiers et les repertoires ...

	- LES DROITS DE VOS FICHIERS N'ONT AUCUNE IMPORTANCE, VOUS N'AVEZ DONC
	  PAS BESOIN DE LES CHANGER (SAUF SI ON VOUS LE DEMANDE DANS LE SUJET).
	
	- En cas de probleme technique avec le sujet, on ne doit s'adresser qu'au
	  surveillant uniquement.

	- Tout materiel non explicitement autorise est strictement interdit.

	- LES EXERCICES DOIVENT ETRE REALISES DANS L'ORDRE, la correction 
	  de l'examen s'arretera des qu'un exercice sera considere comme faux.

	- Toute sortie est definitive.


Le Code :

	- Des fonctions utiles sont parfois donnees dans le repertoire
	  ~/sujet/misc

	- Le releve du code est automatise, un programme testera le bon
	  fonctionnement des exercices.

	- Les fonctions autorisees sont indiquees dans l'en-tete de chaque 
	  exercice. Vous pouvez recoder toutes les fonctions a votre guise.

	- Toute fonction non autorisee explicitement est interdite.

	- Vous avez le droit a des feuilles blanches et un stylo.

	- Les exercices dit "subsidiaires" sont des exercices qui donnent des
	  points si vous avez fait les exercices qui les precedent.

	- Les exercices dit "bonus" sont des exercices qui donnent des points 
	  supplementaires meme si vous ne faites pas les exercices qui les 
	  precedent.

	- Pour toute question apres l'examen, creez un ticket sur l'intra-bocal
	  (http://intra-bocal.epitech.net), ou envoyez un mail a
	  contact@staff.epita.fr


 ----------******------------*****------------******------------*****----------


------------------- ******** -------------------

Exercice 1 : maff_alpha
------------------------
Nom du fichier C        :       maff_alpha.c
Nom du repertoire       :       ex_1
Temps de realisation    :       20 minutes.
Fonctions autorisee     :       my_putchar
Compilation		:	cc -o maff_alpha maff_alpha.c


        Ecrire un programme qui affiche l'alphabet une lettre sur 2
        en minuscule, une lettre sur 2 en majuscule. (voir exemple)
        
        Le fichier maff_alpha.c contiendra le main et tout ce qu'il faut
        (notament la fonction my_putchar)

	ATTENTION le programme sera compile comme :
	cc -o maff_alpha maff_alpha.c


exemple :
(jog@almarita)./maff_alpha
aBcDeFgHiJkLmNoPqRsTuVwXyZ
(jog@almarita)./maff_alpha | cat -e
aBcDeFgHiJkLmNoPqRsTuVwXyZ$
(jog@almarita)


------------------- ******** -------------------

Exercice 2 : epur_str
_______________________
Nom de l'executable	:	epur_str
repertoire		:	ex_2
executable		:	epur_str
temps de realisation	:       30 minutes.
Fonction autorisee	:       my_putchar, my_putnbr, my_putstr.
Makefile		:	oui  


        Ecrire un programme qui prend en parametre une chaine de caracteres
        et qui affiche les mots separes par un seul espace.
	Le dernier mot sera suivi d'un '\n' (meme s'il y en a aucun).
	Il ne devra y avoir d'espace ni avant le premier n'y apres le dernier
	mot.
	On appel "mot" une chaine de caractere separee par soit des espaces et tabulations, 
	soit le debut de la chaine ou la fin de la chaine.

        Si aucun parametre n'est transmis, epur_str affiche '\n'.


Exemples:

(jog@almarita)./epur_str "abc cba abc cab cba" | cat -e
abc cba abc cab cba$
(jog@almarita)

(jog@almarita)./epur_str "   Remus   et   Romulus    sont  les deux mamelles de Rome  " | cat -e
Remus et Romulus sont les deux mamelles de Rome$
(jog@almarita)

(jog@almarita)./epur_str | cat -e
$
(jog@almarita)


------------------- ******** -------------------

Exercice 3 : ord_alphlong
------------------------
Nom de l'executable     :       ord_alphlong
Nom du repertoire       :       ex_3
temps de realisation    :       20 minutes.
Fonction autorisee      :       my_putchar, my_putnbr, my_putstr, malloc, free, write
Makefile		: 	oui



        Ecrire un programme qui prend en parametre une chaine de caracteres
        et qui affiche les mots de cette chaine par ordre de longueur puis
        dans l'ordre ascii. Les majuscules et minuscules sont identiques dans
        l'ordre alphabetique (bien regarder les exemples). En cas d'egalite
        alphabetique (ex aA et Aa) les mots doivent rester dans l'ordre
        ou ils etaient dans la chaine d'origine (dernier exemple).

        Si aucun parametre n'est transmis, ce programme renvoie '\n'.

	Dans les chaines, il n'y aura que des espaces, des tabulations
	et des caracteres alphanumeriques.

        Vous n'afficherez qu'un espace entre les mots. Aucun
        avant le premier ni apres le dernier de chaque ligne.


exemple 1:
(jog@almarita)./ord_alphlong "De son baton il frappa la pierre et l eau jaillit" | cat -e
l$
De et il la$
eau son$
baton$
frappa pierre$
jaillit$
(jog@almarita)

exemple 2:
(jog@almarita)./ord_alphlong "A a b B cc ca cd" | cat -e
A a b B$
ca cc cd$
(jog@almarita)


------------------- ******** -------------------

Exercice 4  : rotone
________________________
Nom de l'executable     :       rotone
Nom du repertoire       :       ex_4
Temps de realisation    :       15 minutes
Language		:	C
Fonction autorisee      :       my_putchar, my_putnbr, my_putstr, write
Makefile		:	oui


         Ecrire un programme qui prend en parametre une chaine de caracteres
         et qui affiche cette chaine en remplacant chaque caractere
         alphabetique par le caractere suivant dans l'ordre alphabetique.

	 
	 
	 'z' devient 'a' et 'Z' devient 'A'.

         Les majuscules restent des majuscules et les minuscules restent des
         minuscules.

         L'affichage se termine toujours par un '\n'.

         Si aucun parametre n'est transmis, le programme affiche '\n'.



exemple 1:
> ./rotone "abc"
bcd
>

exemple 2:
> ./rotone "Eliminez le bingalow 505" | cat -e
Fmjnjofa mf cjohbmpx 505$
>

exemple 3:
> ./rotone " AkjhZ zLKIJz , 23y " | cat -e
 BlkiA aMLJKa , 23z $
>

exemple 3:
> ./rotone | cat -e
$
>
