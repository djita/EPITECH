Details administratifs:

- Aucune forme de communication n'est permise.

       - Vous devez avoir votre carte d'etudiant. Vous devez la poser face visible
          sur votre table

        - Ceci est un examen, il est interdit de discuter, ecouter de la musique,
          faire du bruit, ou de produire toute autres nuisances pouvant deranger les
          autres etudiants ou perturber le bon deroulement de l'examen

        - Vos telephones portables doivent etre eteints.

        - Il faudra utiliser le sous-repertoire "rendu" a la racine du compte,
          il contiendra les fichiers aux noms demandes pour chaque
          exercice.

        - Le repertoire "rendu", doit contenir un fichier nomme "auteur"
          comprenant :
                le login (ex: jog) suivi d'un '\n'.
          ce qui doit donner:

          jog@neutron> cat -e ~/rendu/auteur
          jog$

	  Si votre fichier auteur est faux, il n'y aura pas de correction de l'exam.
	  
        - C'est un programme qui s'occupe du ramassage, respectez les noms,
          les chemins, les fichiers et les repertoires ...

        - LES DROITS DE VOS FICHIERS N'ONT AUCUNE IMPORTANCE, VOUS N'AVEZ DONC
          PAS BESOIN DE LES CHANGER (SAUF SI ON VOUS LE DEMANDE DANS LE SUJET).

        - En cas de probleme technique avec le sujet, on ne doit s'adresser qu'au
          surveillant uniquement.

        - Tout materiel non explicitement autorise est strictement interdit.

        - Toute sortie est definitive.

 ----------******------------*****------------******------------*****----------

Vous devez effectuer le rendu dans ~/rendu/
Pour chaque question vous devez rendre un fichier nomme
ex_"no_question".sql contenant la requete sql de l'exercice en question (la
requete doit etre valide).

Par exemple pour l'exercice 05 le fichier doit s'appeler ex_05.sql.

Pour le qcm, mettez juste le numero de la reponse dans le fichier
ex_"no_question".sql (avec ou sans \n ca n'a pas d'importance).

Vous n'avez le droit de faire qu'une seule requete par question (en gros il ne doit
y avoir q'un seul ';' dans chaque fichier), sauf quand il
est explicitement precise que l'on doit faire plusieurs requetes.


Quand vous vous loguez, la base de donnee est initialisee et lancee.
Si vous avez un probleme avec la base de donnee, vous pouvez la
reinitialiser avec le script "~/sujet/install_sql.sh".
Attention la base va etre completement effacee et le server relance.
La base de donnee se trouve dans /tmp.

Une fois la base lancee, vous pouvez vous y connecter avec votre client
mysql. Le login est "root" et il n'y as pas de password
La base de donnee a utiliser s'appelle epitech_tp, c'est la seule base a
utiliser, dans les reponses que vous rendrez il ne faut pas selectionner la base.

(machin_t@bidule) mysql -u root epitech_tp
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 1
Server version: 5.0.45 FreeBSD port: mysql-server-5.0.45

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql>


Le contenu de la base utilisee pour la correction sera le meme que celle que vous avez
au detail pres que les id de chaque entree est susceptible de changer (mais les lien 
entre les entrees seront toujours les memes: les films auront les memes distributeurs,
les membres seront alles voir les memes films et auront les memes cartes de reduction).


Questions:

01. On aimerai afficher le titre de tous les films en MD5, dans la colonne "titre md5"
et en SHA1 dans la colonne "titre sha1"

02. Faire une requete qui affiche le nombre de films qu'il y a dans la table
film (nombre films)

03. Faire une une requete qui selectionne le titre (titre) des films contenant
dans leur titre la chaine de caractere 'day' independament de la casse (case non sensitive, ca doit matcher dAy dAY etc..).
Il faudra aussi que le genre des films soit egal à 1

04. Faire une requete qui affiche pour chaque genre des films de la table
film: l'id du genre, et le nombre de films qu'il y a dans ce genre :
 Il y aura donc une colonne id_genre, "nombre films". En plus de cela, cette
requete devra aussi afficher
le nombre Total de films sur la dernière ligne, celle ci aura un id_genre
null ! (Indice : Compatible qu'avec Mysql, super agregat...)

05. Faire une requete qui affiche le plus grand id_film dans une colonne
"max id film" pour
le genre "action"

06. Compter le nombre d'abonnement propose par le cinema, ainsi que la moyenne
du cout des abonnements, arrondi à l'unite (superieur).Il faudra afficher le nombre
d'abonnement dans une colonne "nbr abo" et la moyenne dans une colonne "c abo"

07. Compter le nombre d'etage du cinema (le rez de chausse n'en est pas un...),
et l'afficher dans une colonne "nbr etage"

08. Affichez pour chaque genre (NULL n'est pas un genre) l'id du genre (id_genre), et la duree du film (duree_min)
le plus cours appartenant a ce genre (0 n'est pas une duree valide).

09. On veu afficher le titre (film), la date de debut d'affiche (date_debut_affiche),
l'id du film (id_film), et le nombre de personnes uniques qui ont vues le film (nb_vues),
des 50 films les plus vus, le tout classe par ordre du nombre de vue decroissant 
puis par id de film croissant.

10. On veu afficher le nombre de films que contiennent chaque genre.
Meme si des films sont nuls, NULL n'est pas un genre de film valide, le tout classe par ordre de nombre de film decroissant, puis par ordre de  nom croissant.
Les colonnes demandees sont: le nom du genre (nom), le total de film du genre (nb_film)

11. Faire une requete qui affiche le titre de tous les films dans la colonne
titre, ordonnee par date de fin d'affiche decroissante

12. Afficher le titre des films (dans une colonne "titre film")
qui ont comme id de genre 0, 6 ou 5 et dont leurs titres commence par la
lettre E (case insensitive).

13. Faire une requete qui affiche le titre des films en majuscule de la table
film du cinema qui ont un id compris (inclu) entre 4, et 50.
La colonne titre en majuscule devra s'appeler "titre_maj"

14. Afficher le nom des reductions dont les ids sont '0' ou '2' ou '4' ou '7'

15. Faire une requete qui selectionne que les etages qui ont plus de 300
places, et qui sont compris entre le 1er et le 3eme inclus.
Il faudra afficher le numero de l'etage (num etage), le nombre de salles
(nbr salle)
dans l'etage et le nombre de places dans l'etage (nbr place), ordonner par
ordre d'etage decroissant !

16. Affichez le nom (nom) et la ville (ville) des personnes qui viennent de charente-maritime
(departement 17)

17. Afficher le nom des reductions qui ont un pourcentage de reduction positif, 
et qui ne sont pas egale à 25. Vous les ordonnerez par id_reduction croissant

18. Qu'elle est la requete la plus optimise :

1: Select id_film, titre, resum FROM film having id_film = 1141;
2: Select id_film, titre, resum FROM film where id_film = 1141;

19. Peut on mettre un having a la place d'un where
1: oui
2: non

20. Que signifie SQL ?

1: « Structured Query Language » 
2: « Syntax Query Language »

